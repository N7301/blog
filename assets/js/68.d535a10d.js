(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{403:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"面向对象进阶3-多态、内部类、常用-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象进阶3-多态、内部类、常用-api"}},[s._v("#")]),s._v(" 面向对象进阶3（多态、内部类、常用 API）")]),s._v(" "),t("h2",{attrs:{id:"_1-多态-面向对象三大特征之三"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-多态-面向对象三大特征之三"}},[s._v("#")]),s._v(" 1. 多态：面向对象三大特征之三")]),s._v(" "),t("h3",{attrs:{id:"_1-1-多态的概述、形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-多态的概述、形式"}},[s._v("#")]),s._v(" 1.1 多态的概述、形式")]),s._v(" "),t("ul",[t("li",[s._v("啥是多态\n"),t("ul",[t("li",[s._v("同一父类型的对象，执行同一个行为时，会表现出不同的行为特征。")])])]),s._v(" "),t("li",[s._v("多态的常见形式\n"),t("ul",[t("li",[t("code",[s._v("父类类型 对象名称 = new 子类构造器;")]),s._v(" （父类类型指向一个子类的对象）")]),s._v(" "),t("li",[t("code",[s._v("接口 对象名称 = new 实现类构造器;")]),s._v("（接口相当于一个干爹，实现类相当于儿子）")]),s._v(" "),t("li",[s._v("具体的行为方法在子类中重写")])])]),s._v(" "),t("li",[s._v("多态中成员访问特点-\n"),t("ul",[t("li",[s._v("方法调用：编译看左边，运行看"),t("u",[s._v("右边")]),s._v("。")]),s._v(" "),t("li",[s._v("变量调用：编译看左边，运行也看"),t("u",[s._v("左边")]),s._v("。（多态侧重行为多态，变量没有多态的概念）\n"),t("ul",[t("li",[s._v("即对于变量调用，还是会使用父类中的变量，而方法是会使用子类中重写的方法的。")])])])])]),s._v(" "),t("li",[s._v("多态的前提\n"),t("ul",[t("li",[s._v("有继承/实现关系")]),s._v(" "),t("li",[s._v("有父类引用指向子类对象")]),s._v(" "),t("li",[s._v("有方法重写")])])])]),s._v(" "),t("h3",{attrs:{id:"_1-2-多态的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-多态的优势"}},[s._v("#")]),s._v(" 1.2 多态的优势")]),s._v(" "),t("ol",[t("li",[s._v("在多态形式下，右边对象可以实现解耦合，便于扩展和维护。")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后续业务行为随对象而变，后续代码无需修改")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("​\t上述代码中，若后续业务需要将 Dog 子类改为Tortoise 子类，则直接改“=”右侧的子类类型即可，后续代码中的行为随着对象的改变而直接变化了，无需修改很多后续的代码。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("定义方法的时候，"),t("u",[s._v("使用父类型作为参数")]),s._v("，该方法就可以接收这父类的一切子类对象，体现出多态的扩展性与便利")])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("多态下会产生的一个问题")]),s._v(" "),t("p",[s._v("多态下不能使用子类的独有功能，因为编译时会使用左侧的父类中的行为。")]),s._v(" "),t("p",[s._v("solve：使用强制类型转换，将父转为子类型。")])]),s._v(" "),t("h3",{attrs:{id:"_1-3-多态下引用数据类型的类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-多态下引用数据类型的类型转换"}},[s._v("#")]),s._v(" 1.3 多态下引用数据类型的类型转换")]),s._v(" "),t("p",[s._v("在多态下会有两种类型转换：")]),s._v(" "),t("ul",[t("li",[s._v("自动类型转换（从子到父）")]),s._v(" "),t("li",[s._v("强制类型转换（从父到子）")])]),s._v(" "),t("p",[t("strong",[s._v("关于强制类型转换：")])]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("子类类型 对象变量 = (子类)父类类型的变量")])]),s._v(" "),t("p",[s._v("代码示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动类型转换")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 强制类型转换:可以实现调用子类独有功能的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lookDoor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("作用：可以解决多态下的劣势，可以实现调用子类独有的功能")])]),s._v(" "),t("li",[t("p",[s._v("注意： 如果转型后的类型和对象真实类型不是同一种类型，那么在转换的时候就会报错 "),t("font",{attrs:{color:"#dd0000"}},[t("strong",[s._v("ClassCastException（类型转换异常）")])])],1)])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("强转转换的一点建议")]),s._v(" "),t("p",[s._v("规定：有继承或者实现关系的2个类型就可以强制类型转换，故编译时可能没问题，但运行时发现强制转换后的类型不是对象真实类型而报错。")]),s._v(" "),t("p",[s._v("Java 建议强转转换前使用 instanceof 判断当前对象的真实类型，再进行强制转换。")])]),s._v(" "),t("p",[t("strong",[s._v("关于 instanceof 关键字的使用：")])]),s._v(" "),t("p",[t("code",[s._v("变量名 instanceof 真实类型")])]),s._v(" "),t("p",[s._v("判断关键字左边的变量指向的对象的真实类型，是否是右边的类型或者是其子类类型，是则返回true，反之false。")]),s._v(" "),t("p",[s._v("代码示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("go")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数类型为父类类型，保证各种动物都可以使用go方法")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"预备~~~"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 独有功能")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Tortoise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Tortoise")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Tortoise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("layEggs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),s._v(" d1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        d1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lookDoor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"结束~~~~"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h3",{attrs:{id:"_1-4-多态的案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-多态的案例"}},[s._v("#")]),s._v(" 1.4 多态的案例")]),s._v(" "),t("p",[s._v("需求：设计一个电脑对象，可以安装2个USB设备。鼠标：被安装时可以完成接入、调用点击功能、拔出功能；键盘：被安装时可以完成接入、调用打字功能、拔出功能。")]),s._v(" "),t("p",[s._v("分析：")]),s._v(" "),t("p",[s._v("①定义一个USB的接口（申明USB设备的规范必须是：可以接入和拔出）。")]),s._v(" "),t("p",[s._v("②提供2个USB实现类代表鼠标和键盘，让其实现USB接口，并分别定义独有功能。")]),s._v(" "),t("p",[s._v("③创建电脑对象，创建2个USB实现类对象，分别安装到电脑中并触发功能的执行。")]),s._v(" "),t("h2",{attrs:{id:"_2-内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-内部类"}},[s._v("#")]),s._v(" 2. 内部类")]),s._v(" "),t("h3",{attrs:{id:"_2-1-内部类的概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-内部类的概述"}},[s._v("#")]),s._v(" 2.1 内部类的概述")]),s._v(" "),t("p",[s._v("内部类就是定义在一个类里面的类，里面的类可以理解成（寄生），外部类可以理解成（宿主）。")]),s._v(" "),t("p",[s._v("如，心脏和人的关系：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("People")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 内部类")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Heart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_2-2-内部类的使用场景、作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-内部类的使用场景、作用"}},[s._v("#")]),s._v(" 2.2 "),t("strong",[s._v("内部类的使用场景、作用")])]),s._v(" "),t("ul",[t("li",[s._v("当一个事物的内部，还有一个部分需要一个完整的结构进行描述，而这个内部的完整的结构又只为外部事物提供服务，那么整个内部的完整结构可以选择使用内部类来设计。")]),s._v(" "),t("li",[s._v("内部类通常可以方便访问外部类的成员，包括私有的成员。")]),s._v(" "),t("li",[s._v("内部类提供了更好的封装性，内部类本身就可以用 private、protected 等修饰，封装性可以做更多控制。（外部类只能用 public 修饰）")])]),s._v(" "),t("h3",{attrs:{id:"_2-3-内部类的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-内部类的分类"}},[s._v("#")]),s._v(" 2.3 内部类的分类")]),s._v(" "),t("h4",{attrs:{id:"_2-3-1-静态内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-静态内部类"}},[s._v("#")]),s._v(" 2.3.1 静态内部类")]),s._v(" "),t("ul",[t("li",[s._v("有static修饰，属于外部类本身")]),s._v(" "),t("li",[s._v("特点、使用与普通类是一样的，类有的成分它都有，只是位置在别人里面而已")]),s._v(" "),t("li",[s._v("可以直接访问外部类的静态成员，"),t("u",[s._v("不能"),t("strong",[s._v("直接")]),s._v("访问外部类的实例成员")]),s._v("（可以创建一个外部类对象，再访问其实例成员）")]),s._v(" "),t("li",[s._v("注意：开发中实际上用的还是比较少")]),s._v(" "),t("li",[s._v("定义示例：")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 静态成员内部类")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Inner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("创建对象的格式："),t("code",[s._v("Outer.Inner in = new Outer.Inner();")])])]),s._v(" "),t("h4",{attrs:{id:"_2-3-2-成员内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-成员内部类"}},[s._v("#")]),s._v(" 2.3.2 成员内部类")]),s._v(" "),t("ul",[t("li",[s._v("无 static 修饰，属于外部类的对象")]),s._v(" "),t("li",[s._v("JDK16 之前，成员内部类中不能定义静态成员，JDK 16 开始也可以定义静态成员了")]),s._v(" "),t("li",[s._v("特点：可以直接访问外部类的静态成员，实例方法中"),t("u",[s._v("可以"),t("strong",[s._v("直接")]),s._v("访问外部类的实例成员")]),s._v("（因为必须先有外部类对象，才能有成员内部类对象，所以可以直接访问外部类对象的实例成员）")]),s._v(" "),t("li",[s._v("定义示例：")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Outer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 成员内部类")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("创建对象格式："),t("code",[s._v("Outer.Inner in = new Outer().new Inner();")]),s._v(" （注意外部类对象后面要加() ）")]),s._v(" "),t("li",[t("strong",[s._v("相关面试题：")]),s._v(" "),t("ul",[t("li",[s._v("在成员内部类中访问所在外部类对象，格式："),t("code",[s._v("外部类名.this.value")]),s._v("，如："),t("code",[s._v("System.out.println(People.this.heartbeat);")])]),s._v(" "),t("li",[s._v("访问当前对象的成员变量，要用 "),t("code",[s._v("this.value")])])])])]),s._v(" "),t("h4",{attrs:{id:"_2-3-3-局部内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-局部内部类"}},[s._v("#")]),s._v(" 2.3.3 局部内部类")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("鸡肋语法，了解即可")])]),s._v(" "),t("li",[s._v("局部内部类放在方法、代码块、构造器等执行体中")]),s._v(" "),t("li",[s._v("局部内部类编译后也会有对应的类文件，其类文件名为： 外部类$N内部类.class")])]),s._v(" "),t("h4",{attrs:{id:"_2-3-4-匿名内部类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-匿名内部类"}},[s._v("#")]),s._v(" 2.3.4 匿名内部类")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("本质上是一个没有名字的局部内部类，定义在方法中、代码块中、等")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("作用")]),s._v("：方便创建子类对象，最终目的为了简化代码编写")])]),s._v(" "),t("li",[t("p",[s._v("特点")]),s._v(" "),t("ul",[t("li",[s._v("匿名内部类写出来就会产生一个匿名内部类的对象")]),s._v(" "),t("li",[s._v("匿名内部类的对象类型相当于是当前 new 的那个的类型的子类类型（可以视为是 Animal 的子类 Tiger 类）")])])]),s._v(" "),t("li",[t("p",[s._v("格式")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" 类"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("抽象类名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("或者接口名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    重写方法"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("⚠️ 直接 "),t("code",[s._v("new abstract_class()")]),s._v(" 是不可以的，故后面加上 {} 进行方法的重写，实现一个匿名内部类。")]),s._v(" "),t("p",[s._v("简单示例：")]),s._v(" "),t("p",[s._v("line3 等号后 ~ line8 的部分相当于 Tiger 类了。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"老虎跑的块~~~"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//class Tiger extends Animal{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    @Override")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    public void run() {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//        System.out.println("老虎跑的块~~~");')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    }")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h4",{attrs:{id:"_2-3-5-匿名内部类常见使用形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-5-匿名内部类常见使用形式"}},[s._v("#")]),s._v(" 2.3.5 匿名内部类常见使用形式")]),s._v(" "),t("p",[s._v("匿名内部类通常作为方法的实际参数进行传输。")]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("go")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Swimming")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("swim")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"运动员泳🏊的贼快~~~~~"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n       学生 老师 运动员可以一起参加游泳比赛\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("go")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Swimming")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"开始。。。"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("swim")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"结束。。。"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Swimming")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("swim")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("对象回调：")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230308222150352.png",alt:"image-20230308222150352"}}),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("开发中不是我们主动去定义匿名内部类的，而是别人需要我们写或者我们可以写的时候才会使用。")]),s._v(" "),t("p",[s._v("匿名内部类的代码可以实现代码进一步的简化。")])]),s._v(" "),t("h2",{attrs:{id:"_3-常用-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用-api"}},[s._v("#")]),s._v(" 3. 常用 API")]),s._v(" "),t("h3",{attrs:{id:"_3-1-object-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-object-类"}},[s._v("#")]),s._v(" 3.1 Object 类")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Object 类的方法是一切子类对象都可以直接使用的，所以我们要学习 Object 类的方法。")])]),s._v(" "),t("li",[t("p",[s._v("一个类要么默认继承了 Object 类，要么间接继承了 Object 类，Object 类是 Java 中的祖宗类")])]),s._v(" "),t("li",[t("p",[s._v("Object类的常用方法")])])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方法名")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("public String toString()")]),s._v(" "),t("td",[s._v("默认是返回当前对象在堆内存中的地址信息:类的全限名@内存地址")])]),s._v(" "),t("tr",[t("td",[s._v("public boolean equals(Object o)")]),s._v(" "),t("td",[s._v("默认是比较当前对象与另一个对象的地址是否相同，相同返回true，不同返回false")])])])]),s._v(" "),t("ul",[t("li",[s._v("一般直接在 IDEA 中自动重写对应类的这两个方法即可。")])]),s._v(" "),t("p",[t("strong",[s._v("toString 方法：")])]),s._v(" "),t("p",[s._v("因为 toString 默认输出对象的地址在开发中毫无意义，更多是希望看到对象的内容数据）")]),s._v(" "),t("p",[s._v("toString 方法存在的意义就是"),t("u",[s._v("为了被子类重写，以便返回对象的内容信息")]),s._v("，而不是地址信息")]),s._v(" "),t("p",[t("strong",[s._v("equals 方法：")])]),s._v(" "),t("p",[s._v("直接比较两个对象的地址是否相同完全可以用 “==” 替代 equals")]),s._v(" "),t("p",[s._v("父类 equals 方法存在的意义就是为了被子类重写，以便子类自己来定制比较规则")]),s._v(" "),t("h3",{attrs:{id:"_3-2-objects-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-objects-类"}},[s._v("#")]),s._v(" 3.2 Objects 类")]),s._v(" "),t("p",[t("font",{attrs:{color:"#dd000"}},[s._v("Objects 是一个"),t("strong",[s._v("工具类")]),s._v("，提供了一些方法去完成一些功能")])],1),s._v(" "),t("p",[s._v("Objects 类与 Object 类也是继承关系。")]),s._v(" "),t("p",[s._v("Objects 类是从 JDK1.7 之后才有的。")]),s._v(" "),t("p",[s._v("官方在进行字符串比较时（自动重写的 equals 方法），没有用字符串对象的的 equals 方法，而是选择了 Objects 的 equals 方法来比较。")]),s._v(" "),t("p",[s._v("原因："),t("strong",[s._v("使用Objects 的 equals 方法在进行对象的内容比较时会更安全。")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("使用 Objects 的 equals 方法在进行对象的内容比较时更安全的原因")]),s._v(" "),t("p",[s._v("Objects 的 equals 方法在比较时，底层会先进行非空判断，从而可以避免空指针异常。再进行 equals 比较")]),s._v(" "),t("p",[s._v("源码分析：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("若直接使用 equals 方法比较时，可能会出现空指针异常，例如：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"itheima"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// System.out.println(s1.equals(s2));   // 留下了隐患，可能出现空指针异常。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("String 的 equals 方法 VS 类的 equals 方法")]),s._v(" "),t("p",[s._v("字符串可以直接用 equals 比较内容，因为 String 类已经重写过该方法了；但自定义的类要重写 equals 方法。")]),s._v(" "),t("p",[s._v("⚠️ String 不能用 “==” 比较内容是否一样，因为 “==” 会视为比较的二者为不同的对象")])]),s._v(" "),t("h3",{attrs:{id:"_3-3-stringbuilder-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-stringbuilder-类"}},[s._v("#")]),s._v(" 3.3 StringBuilder 类")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("StringBuilder 是一个"),t("u",[s._v("可变")]),s._v("的字符串类，我们可以把它看成是一个对象容器。（String 是"),t("u",[s._v("不可变")]),s._v("字符串类）")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("作用")]),s._v("：提高字符串的操作效率，如拼接、修改等。")])]),s._v(" "),t("li",[t("p",[s._v("StringBuilder 常用方法")])])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方法名称")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("public StringBuilder append(任意类型)")]),s._v(" "),t("td",[s._v("添加数据并返回StringBuilder对象本身")])]),s._v(" "),t("tr",[t("td",[s._v("public StringBuilder reverse()")]),s._v(" "),t("td",[s._v("将对象的内容反转，会直接将对象本身修改")])]),s._v(" "),t("tr",[t("td",[s._v("public int length()")]),s._v(" "),t("td",[s._v("返回对象内容长度")])]),s._v(" "),t("tr",[t("td",[s._v("public String toString()")]),s._v(" "),t("td",[s._v("通过toString()就可以实现把StringBuilder转换为String")])])])]),s._v(" "),t("ul",[t("li",[s._v("StringBuilder 支持链式编程，e.g. "),t("code",[s._v('sb1.append("a").append("b").append("c").append("我爱你中国");')])])]),s._v(" "),t("p",[s._v("⚠️ 注意："),t("font",{attrs:{color:"#dd0000"}},[s._v("StringBuilder 只是拼接字符串的手段，效率好，使用时最终还是要转成 String。")]),s._v(" 用 toString 恢复 String。故 "),t("font",{attrs:{color:"#dd0000"}},[s._v("定义字符串用 String，拼接、修改等操作字符串使用 StringBuilder")]),s._v("。")],1),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuilder")]),s._v(" sb2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsb2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"456"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 恢复成String类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" rs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sb2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("check")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用字符串")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("check")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("内存原理")]),s._v(" "),t("p",[s._v("String 类拼接字符串时，一个加号会导致堆内存中创建两个对象，一个是拼接时的 StringBuilder 对象，一个是拼好后转换过去的 String 对象。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230309104010550.png",alt:"image-20230309104010550"}})]),s._v(" "),t("p",[s._v("StringBuilder 类拼接字符串时，只会在堆内存中创建一个 StringBuilder 对象，所有拼接操作都在这个对象中完成。效率变高。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230309104033219.png",alt:"image-20230309104033219"}})])]),s._v(" "),t("h3",{attrs:{id:"_3-4-math-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-math-类"}},[s._v("#")]),s._v(" 3.4 Math 类")]),s._v(" "),t("p",[s._v("包含执行基本数字运算的方法，Math类没有提供公开的构造器")]),s._v(" "),t("p",[s._v("**如何使用类中的成员呢？**看类的成员是否都是静态的，如果是，通过类名就可以直接调用")]),s._v(" "),t("p",[t("strong",[s._v("Math")]),s._v(" "),t("strong",[s._v("类的常用方法")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方法名")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("public static int abs(int a)")]),s._v(" "),t("td",[s._v("获取参数绝对值")])]),s._v(" "),t("tr",[t("td",[s._v("public static double  ceil(double a)")]),s._v(" "),t("td",[s._v("向上取整")])]),s._v(" "),t("tr",[t("td",[s._v("public static double  floor(double a)")]),s._v(" "),t("td",[s._v("向下取整")])]),s._v(" "),t("tr",[t("td",[s._v("public static int round(float a)")]),s._v(" "),t("td",[s._v("四舍五入")])]),s._v(" "),t("tr",[t("td",[s._v("public static int max(int a,int b)")]),s._v(" "),t("td",[s._v("获取两个int值中的较大值")])]),s._v(" "),t("tr",[t("td",[s._v("public static double pow(double a,double b)")]),s._v(" "),t("td",[s._v("返回a的b次幂的值")])]),s._v(" "),t("tr",[t("td",[s._v("public static double random()")]),s._v(" "),t("td",[s._v("返回值为double的随机值，范围[0.0,1.0)")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-5-system-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-system-类"}},[s._v("#")]),s._v(" 3.5 System 类")]),s._v(" "),t("p",[s._v("System 也是一个工具类，代表了当前系统，提供了一些与系统相关的方法")]),s._v(" "),t("p",[t("strong",[s._v("System")]),s._v(" "),t("strong",[s._v("类的常用方法")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方法名")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("public  static void exit(int status)")]),s._v(" "),t("td",[s._v("终止当前运行的 Java 虚拟机，非零表示异常终止")])]),s._v(" "),t("tr",[t("td",[s._v("public  static long currentTimeMillis()")]),s._v(" "),t("td",[s._v("返回当前系统的时间毫秒值形式")])]),s._v(" "),t("tr",[t("td",[s._v("public  static void arraycopy(数据源数组, 起始索引, 目的地数组, 起始索引, 拷贝个数)")]),s._v(" "),t("td",[s._v("数组拷贝  （了解）")])])])]),s._v(" "),t("p",[s._v("注意：System.exit() 相当于删库跑路，可不能瞎用！！！")]),s._v(" "),t("p",[t("strong",[s._v("关于时间毫秒值：")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("计算机认为时间是有起点的，起始时间： 1970年1月1日 00:00:00")])]),s._v(" "),t("li",[t("p",[s._v("时间毫秒值：指的是从1970年1月1日   00:00:00走到此刻的总的毫秒数，应该是很大的。 1s = 1000ms。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("System.currentTimeMillis()")]),s._v(" 可以用来进行时间的计算：性能分析。")])])]),s._v(" "),t("h3",{attrs:{id:"_3-6-bigdecimal-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-bigdecimal-类"}},[s._v("#")]),s._v(" 3.6 BigDecimal 类")]),s._v(" "),t("p",[s._v("（大数据类型）用于解决浮点型运算精度失真的问题")]),s._v(" "),t("p",[s._v("浮点型运算的时候直接+  * / 可能会出现数据失真（精度问题）。")]),s._v(" "),t("p",[t("strong",[s._v("BigDecimal 的使用：")])]),s._v(" "),t("p",[s._v("创建对象 BigDecimal 封装浮点型数据（最好的方式是调用方法）")]),s._v(" "),t("p",[s._v("⚠️ "),t("font",{attrs:{color:"#dd0000"}},[s._v("阿里开发规范："),t("strong",[s._v("禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDerimal 对象")]),s._v("。")])],1),s._v(" "),t("p",[s._v("原因：BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。如:"),t("code",[s._v("BigDecimalg = new BigDecimal(0.1F);")]),s._v("实际的存储值为:0.10000000149")]),s._v(" "),t("p",[s._v("正例：优先推荐入参为String 的构造方法，或使用 BigDecimal 的 valueof 方法，此方法内部其实执行了Double 的 toString，而 Double 的 toString 按 double 的实际能表达的精度对尾数进行了截断。")]),s._v(" "),t("p",[t("code",[s._v('BigDecimal recommend1 = new BigDecimal("0.1");')])]),s._v(" "),t("p",[t("code",[s._v("BigDecimal recommend2 = BigDecimal.valueOf(0.1);")])]),s._v(" "),t("p",[s._v("⚠️ 注意："),t("font",{attrs:{color:"#dd0000"}},[s._v("BigDecimal 只是手段，效率好，使用时最终还是要转成 对应的 double 数据类型。")]),s._v(" 使用 doubleValue() 转为 double。")],1),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 包装浮点型数据成为大数据对象 BigDeciaml")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BigDecimal")]),s._v(" a1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BigDecimal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BigDecimal")]),s._v(" b1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BigDecimal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BigDecimal")]),s._v(" c1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BigDecimal c1 = a1.subtract(b1);")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BigDecimal c1 = a1.multiply(b1);")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BigDecimal c1 = a1.divide(b1);")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目的：double")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" rs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doubleValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("⚠️ BigDecimal 是一定要精度运算的")]),s._v(" "),t("p",[s._v("如，10/3 就无法精确运算，故 BigDecimal 会抛出异常。")]),s._v(" "),t("p",[s._v("solve： public BigDecimal divide (另一个BigDecimal对象，精确几位，舍入模式)")])])}),[],!1,null,null,null);t.default=e.exports}}]);