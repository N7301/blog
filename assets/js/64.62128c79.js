(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{399:function(t,a,_){"use strict";_.r(a);var s=_(4),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面向对象基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象基础"}},[t._v("#")]),t._v(" 面向对象基础")]),t._v(" "),a("h2",{attrs:{id:"_1-类和对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-类和对象"}},[t._v("#")]),t._v(" 1. 类和对象")]),t._v(" "),a("h3",{attrs:{id:"_1-1-类和对象的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-类和对象的理解"}},[t._v("#")]),t._v(" 1.1 类和对象的理解")]),t._v(" "),a("p",[t._v("客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。")]),t._v(" "),a("ul",[a("li",[t._v("类\n"),a("ul",[a("li",[t._v("类的理解\n"),a("ul",[a("li",[t._v("类是对现实生活中一类具有共同属性和行为的事物的抽象")]),t._v(" "),a("li",[t._v("类是对象的数据类型，类是具有相同属性和行为的一组对象的集合")]),t._v(" "),a("li",[t._v("简单理解：类就是对现实事物的一种描述")])])]),t._v(" "),a("li",[t._v("类的组成\n"),a("ul",[a("li",[t._v("属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）")]),t._v(" "),a("li",[t._v("行为：指事物能执行的操作，例如：手机事物（打电话，发短信）")])])])])]),t._v(" "),a("li",[t._v("类和对象的关系\n"),a("ul",[a("li",[t._v("类：类是对现实生活中一类具有共同属性和行为的事物的抽象，"),a("u",[t._v("是对象共同特征的描述")])]),t._v(" "),a("li",[t._v("对象：是能够看得到摸的着的真实存在的实体，"),a("u",[t._v("是真实存在的具体实例")])]),t._v(" "),a("li",[t._v("简单理解："),a("strong",[t._v("类是对事物的一种描述，对象则为具体存在的事物")])])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-类的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-类的定义"}},[t._v("#")]),t._v(" 1.2 类的定义")]),t._v(" "),a("p",[t._v("类的组成是由属性和行为两部分组成")]),t._v(" "),a("ul",[a("li",[t._v("属性：在类中通过成员变量来体现（类中方法外的变量）")]),t._v(" "),a("li",[t._v("行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）")])]),t._v(" "),a("p",[t._v("⚠️ "),a("strong",[t._v("补充注意事项：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("类名首字母建议大写，且有意义，满足“驼峰模式”。")])]),t._v(" "),a("li",[a("p",[t._v("一个Java文件中可以定义多个class类，且"),a("u",[t._v("只能一个类是public修饰，而且public修饰的类名必须成为代码文件名")]),t._v("。 实际开发中"),a("font",{attrs:{color:"#dd0000"}},[t._v("建议还是一个文件定义一个class类")]),t._v("。")],1)]),t._v(" "),a("li",[a("p",[t._v("成员变量的完整定义格式是："),a("code",[t._v("修饰符 数据类型 变量名称 = 初始化值")]),t._v("； "),a("font",{attrs:{color:"#dd0000"}},[t._v(" 一般无需指定初始化值，存在默认值。")])],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("对象的成员变量的默认值规则：")])]),t._v(" "),a("li",[a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("数据类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("明细")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("基本类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("byte、short、char、int、long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("基本类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("float、double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0.0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("基本类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("引用类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("类、接口、数组、String")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("null")])])])])])])])]),t._v(" "),a("h2",{attrs:{id:"_2-对象内存图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象内存图"}},[t._v("#")]),t._v(" 2. 对象内存图")]),t._v(" "),a("h3",{attrs:{id:"_2-1-多个对象内存图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-多个对象内存图"}},[t._v("#")]),t._v(" 2.1 多个对象内存图")]),t._v(" "),a("ul",[a("li",[t._v("对象的成员方法不直接加载到堆内存中，而是在堆内存中引用方法区中的内容。")]),t._v(" "),a("li",[t._v("对象的成员变量存储值在堆内存中修改。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230129154403005.png",alt:"image-20230129154403005"}})]),t._v(" "),a("ul",[a("li",[t._v("执行到第二个对象创建时，在堆内存中再开辟一个新的空间存此新对象。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230129155629674.png",alt:"image-20230129155629674"}})]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("ul",[a("li",[t._v("对象放在"),a("u",[t._v("堆内存")]),t._v("中。")]),t._v(" "),a("li",[a("code",[t._v("Car c = new Car();")]),t._v(" 语句中，c 变量名中存储的是对象"),a("u",[t._v("在堆内存中的地址")]),t._v("。")]),t._v(" "),a("li",[t._v("成员变量（name、price）的数据"),a("u",[t._v("放在对象中")]),t._v("，存在堆内存中。")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-多个对象指向相同内存图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-多个对象指向相同内存图"}},[t._v("#")]),t._v(" 2.2 多个对象指向相同内存图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230129160159915.png",alt:"image-20230129160159915"}})]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当多个对象的引用指向同一个内存空间（变量所记录的地址值是一样的）")])]),t._v(" "),a("li",[a("p",[t._v("只要有任何一个对象修改了内存中的数据，随后，无论使用哪一个对象进行数据获取，都是修改后的数据。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-垃圾回收"}},[t._v("#")]),t._v(" 2.3 垃圾回收")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当堆内存中的"),a("u",[t._v("类对象")]),t._v("或"),a("u",[t._v("数组对象")]),t._v("，没有被任何变量引用（指向）时，就会被判定为内存中的“垃圾”。")]),t._v(" "),a("ul",[a("li",[t._v("如上图中若代码中后续还有 "),a("code",[t._v("s1=null; s2=null;")]),t._v(" ，会导致左侧两条指向堆内存中对象存储区域的红线不存在，此时堆内存的白色区域变成了内存垃圾。")])])]),t._v(" "),a("li",[a("p",[t._v("Java 存在自动垃圾回收器，会定期进行清理。")])])]),t._v(" "),a("h2",{attrs:{id:"_3-构造器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-构造器"}},[t._v("#")]),t._v(" 3. 构造器")]),t._v(" "),a("h3",{attrs:{id:"_3-1-构造器的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-构造器的作用"}},[t._v("#")]),t._v(" 3.1 构造器的作用")]),t._v(" "),a("p",[t._v("初始化类的对象，并返回对象的地址。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-构造器的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-构造器的分类"}},[t._v("#")]),t._v(" 3.2 构造器的分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("无参数构造器")]),t._v(" "),a("ul",[a("li",[t._v("（默认存在的）：初始化对象时，成员变量的数据均采用默认值。")])])]),t._v(" "),a("li",[a("p",[t._v("有参数构造器")]),t._v(" "),a("ul",[a("li",[t._v("在初始化对象的时候，同时可以为对象进行赋值。")])])])]),t._v(" "),a("p",[t._v("⚠️ "),a("strong",[t._v("注意事项：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("任何类定义出来，默认就自带了无参数构造器，写不写都有。")])]),t._v(" "),a("li",[a("p",[t._v("一旦定义了有参数构造器，无参数构造器就没有了，此时就需要自己写一个无参数构造器了。")])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无参数构造器（此时需要明确写出来）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有参数构造器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"_4-this-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-this-关键字"}},[t._v("#")]),t._v(" 4. this 关键字")]),t._v(" "),a("ul",[a("li",[t._v("作用\n"),a("ul",[a("li",[t._v("代表当前对象的地址")])])]),t._v(" "),a("li",[t._v("this关键字在构造器中、成员方法中可以做什么\n"),a("ul",[a("li",[t._v("可以用于访问当前对象的成员变量")])])])]),t._v(" "),a("h2",{attrs:{id:"_5-封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-封装"}},[t._v("#")]),t._v(" 5. 封装")]),t._v(" "),a("h3",{attrs:{id:"_5-1-什么是封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-什么是封装"}},[t._v("#")]),t._v(" 5.1 什么是封装")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("面向对象的三大特征："),a("strong",[a("u",[t._v("封装")])]),t._v("，继承，多态")])]),t._v(" "),a("li",[a("p",[t._v("隐藏实现细节，暴露出合适的访问方式。（合理隐藏、合理暴露）")])])]),t._v(" "),a("h3",{attrs:{id:"_5-2-封装的实现步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-封装的实现步骤"}},[t._v("#")]),t._v(" 5.2 封装的实现步骤")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一般对成员变量使用  "),a("font",{attrs:{color:"#dd0000"}},[t._v("private")]),t._v(" (私有)关键字修饰进行隐藏，private 修饰后该成员变量就只能在当前类中访问。")],1)]),t._v(" "),a("li",[a("p",[t._v("提供 public 修饰的公开的 getter、setter 方法暴露其取值和赋值。")]),t._v(" "),a("ul",[a("li",[a("u",[t._v("IDEA 中可以自动生成 getter、setter 方法")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("方法和哪个对象封装在一起怎么确定 ？")]),t._v(" "),a("p",[t._v("方法导致谁的属性变化，该方法就属于哪个对象")])]),t._v(" "),a("h3",{attrs:{id:"_5-3-封装的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-封装的好处"}},[t._v("#")]),t._v(" 5.3 封装的好处")]),t._v(" "),a("ul",[a("li",[t._v("加强了程序代码的安全性。")]),t._v(" "),a("li",[t._v("适当的封装可以提升开发效率，同时可以让程序更容易理解与维护。")])]),t._v(" "),a("h2",{attrs:{id:"_6-标准-javabean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-标准-javabean"}},[t._v("#")]),t._v(" 6. 标准 JavaBean")]),t._v(" "),a("p",[t._v("JavaBean: 也可以理解成实体类，其对象可以用于在程序中封装数据。")]),t._v(" "),a("p",[a("strong",[t._v("标准JavaBean须满足如下要求：")])]),t._v(" "),a("ul",[a("li",[t._v("成员变量使用 private 修饰。")]),t._v(" "),a("li",[t._v("提供每一个成员变量对应的 setXxx() / getXxx()。")]),t._v(" "),a("li",[t._v("必须提供一个无参构造器。")])]),t._v(" "),a("h2",{attrs:{id:"_7-成员变量和局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-成员变量和局部变量"}},[t._v("#")]),t._v(" 7.  成员变量和局部变量")]),t._v(" "),a("h3",{attrs:{id:"_7-1-成员变量和局部变量的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-成员变量和局部变量的区别"}},[t._v("#")]),t._v(" 7.1 成员变量和局部变量的区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("区别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("成员变量")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("局部变量")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("类中位置不同")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("类中，方法外")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("常见于方法中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("font",{attrs:{color:"#dd0000"}},[t._v("初始化值不同")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("font",{attrs:{color:"#dd0000"}},[t._v("有默认初始化值")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("font",{attrs:{color:"#dd0000"}},[t._v("没有，使用之前需要完成赋值")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("内存中位置不同")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("堆内存")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("栈内存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("生命周期不同")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("随着对象的创建而存在，随着对象的消失而消失")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("随着方法的调用而存在，随着方法的运行结束而消失")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("作用域")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(不一定)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在所归属的大括号中")])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);