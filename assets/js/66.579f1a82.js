(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{401:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"面向对象进阶1-static、单例、代码块、继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象进阶1-static、单例、代码块、继承"}},[s._v("#")]),s._v(" 面向对象进阶1（static、单例、代码块、继承）")]),s._v(" "),t("h2",{attrs:{id:"_1-static-关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-static-关键字"}},[s._v("#")]),s._v(" 1. static 关键字")]),s._v(" "),t("h3",{attrs:{id:"_1-1-static-是什么、修饰成员变量和成员方法的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-static-是什么、修饰成员变量和成员方法的用法"}},[s._v("#")]),s._v(" 1.1 static 是什么、修饰成员变量和成员方法的用法")]),s._v(" "),t("h4",{attrs:{id:"_1-1-1-static-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-static-是什么"}},[s._v("#")]),s._v(" 1.1.1 static 是什么")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("static 是静态的意思，可用来修饰成员变量和成员方法")])]),s._v(" "),t("li",[t("p",[s._v("static 修饰成员变量表示该成员变量只在内存中只存储一份，可以被共享访问、修改。")])])]),s._v(" "),t("h4",{attrs:{id:"_1-1-2-成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-成员变量"}},[s._v("#")]),s._v(" 1.1.2 成员变量")]),s._v(" "),t("p",[s._v("成员变量可以分为2类：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("静态成员变量")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("有 static 修饰，属于类，内存中加载一次")])]),s._v(" "),t("li",[t("p",[s._v("常表示如在线人数信息、等需要被共享的信息，可以被共享访问")])]),s._v(" "),t("li",[t("p",[s._v("示例代码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 静态成员变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" onlineNumber"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("161")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("访问格式："),t("u",[s._v("推荐使用 "),t("code",[s._v("类名.静态成员变量")])]),s._v("，不推荐 "),t("code",[s._v("对象.静态成员变量")])])])])]),s._v(" "),t("li",[t("p",[s._v("实例成员变量")]),s._v(" "),t("ul",[t("li",[s._v("无static修饰，存在于每个对象中")]),s._v(" "),t("li",[s._v("常表示姓名name、年龄age、等属于每个对象的信息。属于每个对象，且每个对象的信息不同")]),s._v(" "),t("li",[s._v("访问格式："),t("u",[t("code",[s._v("对象.实例成员变量")])])])])])]),s._v(" "),t("h4",{attrs:{id:"_1-1-3-成员方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-成员方法"}},[s._v("#")]),s._v(" 1.1.3 成员方法")]),s._v(" "),t("p",[s._v("成员方法可以分为2类：")]),s._v(" "),t("ul",[t("li",[s._v("静态成员方法\n"),t("ul",[t("li",[s._v("有 static 修饰，属于类")]),s._v(" "),t("li",[s._v("使用场景：如果该方法是以执行一个共用功能为目的，则可以申明成静态方法")]),s._v(" "),t("li",[s._v("访问："),t("u",[s._v("建议用类名访问")]),s._v("，也可以用对象访问。"),t("code",[s._v("类名.静态成员方法")])])])]),s._v(" "),t("li",[s._v("实例成员方法\n"),t("ul",[t("li",[s._v("无 static 修饰，属于对象")]),s._v(" "),t("li",[s._v("使用场景：表示对象自己的行为的，且方法中需要访问实例成员的，则该方法必须申明成实例方法")]),s._v(" "),t("li",[s._v("访问："),t("u",[s._v("只能用对象触发访问")])])])])]),s._v(" "),t("h3",{attrs:{id:"_1-2-static-修饰成员变量的内存原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-static-修饰成员变量的内存原理"}},[s._v("#")]),s._v(" 1.2 static 修饰成员变量的内存原理")]),s._v(" "),t("p",[s._v("在加载一个类时，会先将此类加载到方法区，同时会在堆内存中开辟一块此类的静态变量区")]),s._v(" "),t("p",[s._v("-> 然后将 main 方法加载进栈内存运行")]),s._v(" "),t("p",[s._v("注：此时内存中还没有 name、age 实例成员变量，因为他们是属于对象的")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230224105808538.png",alt:"image-20230224105808538"}})]),s._v(" "),t("p",[s._v("-> 在创建对象时，才在堆内存中开辟一个新的空间出来。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230224110029735.png",alt:"image-20230224110029735"}})]),s._v(" "),t("p",[s._v("-> 有新的对象创建时，在堆内存中开辟另一个空间表示此对象。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230224110133132.png",alt:"image-20230224110133132"}})]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("同一个类中访问静态成员变量时，类名可以省略不写。")])]),s._v(" "),t("h3",{attrs:{id:"_1-3-static-修饰成员方法的内存原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-static-修饰成员方法的内存原理"}},[s._v("#")]),s._v(" 1.3 static 修饰成员方法的内存原理")]),s._v(" "),t("p",[s._v("在初始加载类时，便会将该类的静态方法同时加载到内存的方法区中，"),t("font",{attrs:{color:"#dd0000"}},[s._v("但实例成员方法此时还不会加载进来")]),s._v("。\n执行图中的 getMax 方法时，将该方法提到栈内存中运行，输出结果之后进行下一步。")],1),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230224110821618.png",alt:"image-20230224110821618"}})]),s._v(" "),t("p",[s._v("->  创建一个对象之后，在堆内存中开辟空间，并将实例成员方法 study 加载入方法区，在对象中指向对相应静态方法和该实例方法的引用。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230224111345867.png",alt:"image-20230224111345867"}})]),s._v(" "),t("h3",{attrs:{id:"_1-4-static-访问的注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-static-访问的注意事项"}},[s._v("#")]),s._v(" 1.4 static 访问的注意事项")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("静态方法只能访问静态的成员，不可以"),t("strong",[s._v("直接")]),s._v("访问实例成员。")]),s._v(" "),t("ul",[t("li",[s._v("只是不能直接在一个静态方法中访问实例成员变量，但可以先在此方法中先创建一个实例成员变量，然后访问其变量。")]),s._v(" "),t("li",[s._v("同时也不能直接访问实例成员方法。")])])]),s._v(" "),t("li",[t("p",[s._v("实例方法可以访问静态的成员，也可以访问实例成员。")])]),s._v(" "),t("li",[t("p",[s._v("静态方法中是不可以出现 this 关键字的。")]),s._v(" "),t("ul",[t("li",[s._v("因为 this 代表当前对象，但是静态方法可以不通过对象来调用。")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("实例方法/变量 ∈ 对象，静态方法/变量 ∈ 类。\n静态成员变量一般设为 public ，因为它全局只有一份。")])]),s._v(" "),t("h2",{attrs:{id:"_2-static-应用知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-static-应用知识"}},[s._v("#")]),s._v(" 2. static 应用知识")]),s._v(" "),t("h3",{attrs:{id:"_2-1-工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-工具类"}},[s._v("#")]),s._v(" 2.1 工具类")]),s._v(" "),t("h4",{attrs:{id:"_2-1-1-什么是工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-什么是工具类"}},[s._v("#")]),s._v(" 2.1.1 什么是工具类")]),s._v(" "),t("p",[s._v("工具类中定义的都是一些静态方法，每个方法都是以完成一个共用的功能为目的。")]),s._v(" "),t("p",[s._v("比如：一个系统的很多部分都需要生成验证码，此时可以开发一个生成验证码的静态方法。")]),s._v(" "),t("h4",{attrs:{id:"_2-1-2-工具类的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-工具类的好处"}},[s._v("#")]),s._v(" 2.1.2 工具类的好处")]),s._v(" "),t("ul",[t("li",[s._v("调用方便")]),s._v(" "),t("li",[s._v("提高了代码复用（一次编写，处处可用）")])]),s._v(" "),t("h4",{attrs:{id:"_2-1-3-为什么工具类中的方法不用实例方法做"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-为什么工具类中的方法不用实例方法做"}},[s._v("#")]),s._v(" 2.1.3 为什么工具类中的方法不用实例方法做？")]),s._v(" "),t("p",[s._v("实例方法需要创建对象调用，此时用对象只是为了调用方法，这样只会浪费内存。")]),s._v(" "),t("h4",{attrs:{id:"_2-1-4-工具类定义时的其他要求-锦上添花"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-工具类定义时的其他要求-锦上添花"}},[s._v("#")]),s._v(" 2.1.4 工具类定义时的其他要求（锦上添花）")]),s._v(" "),t("ul",[t("li",[s._v("工具类中都是静态方法，直接用类名访问即可。")]),s._v(" "),t("li",[t("u",[s._v("工具类无需创建对象，建议将工具类的构造器进行私有化。（用 private 阉割掉）")])])]),s._v(" "),t("h3",{attrs:{id:"_2-2-代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-代码块"}},[s._v("#")]),s._v(" 2.2 代码块")]),s._v(" "),t("h4",{attrs:{id:"_2-2-1-代码块概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-代码块概述"}},[s._v("#")]),s._v(" 2.2.1 代码块概述")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("代码块是类的5大成分之一（成员变量、构造器，方法，"),t("u",[s._v("代码块")]),s._v("，内部类），定义在类中方法外。")])]),s._v(" "),t("li",[t("p",[s._v("在Java类下，使用 { } 括起来的代码被称为代码块 。")])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-2-代码块分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-代码块分类"}},[s._v("#")]),s._v(" 2.2.2 代码块分类")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("静态代码块")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("格式："),t("code",[s._v("static{}")])])]),s._v(" "),t("li",[t("p",[s._v("特点：需要通过 static 关键字修饰，"),t("font",{attrs:{color:"#dd0000"}},[s._v("随着类的加载而加载，并且自动触发、只执行一次")])],1)]),s._v(" "),t("li",[t("p",[s._v("作用：若要在启动系统时对数据进行初始化，建议使用静态代码块完成数据的初始化操作，代码优雅")])]),s._v(" "),t("li",[t("p",[s._v("使用场景：在类加载的时候做一些静态数据初始化的操作，以便后续使用。比如，数据库的连接可以在 static { } 中执行，进行静态资源的初始化。")])]),s._v(" "),t("li",[t("p",[s._v("代码示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"----main方法执行----"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     静态代码块：有static修饰，属于类，与类一起优先加载一次，自动触发执行\n    */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"----静态代码块被触发执行了----"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以上代码中先触发静态代码块，然后执行main方法")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("构造代码块（"),t("strong",[s._v("了解，用的少")]),s._v("）")]),s._v(" "),t("ul",[t("li",[s._v("也可以叫实例代码块")]),s._v(" "),t("li",[s._v("格式：{}")]),s._v(" "),t("li",[s._v("特点：每次创建对象，调用构造器执行时，都会执行该代码块中的代码，并且在构造器执行前执行")]),s._v(" "),t("li",[s._v("使用场景：初始化实例资源。")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-2-3-案例-斗地主游戏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-案例-斗地主游戏"}},[s._v("#")]),s._v(" 2.2.3 案例——斗地主游戏")]),s._v(" "),t("p",[t("strong",[s._v("需求：")])]),s._v(" "),t("p",[s._v("在启动游戏房间的时候，应该提前准备好54张牌，后续才可以直接使用这些牌数据。")]),s._v(" "),t("p",[t("strong",[s._v("分析：")])]),s._v(" "),t("p",[s._v("①该房间只需要一副牌。")]),s._v(" "),t("p",[s._v("②定义一个静态的 ArrayList 集合存储 54 张牌对象，"),t("font",{attrs:{color:"#dd0000"}},[s._v("静态的集合只会加载一份")]),s._v("。")],1),s._v(" "),t("p",[s._v("③在启动游戏房间前，应该将 54 张牌初始化好")]),s._v(" "),t("p",[s._v("④"),t("font",{attrs:{color:"#dd0000"}},[s._v("当系统启动的同时需要准备好 54 张牌数据，此时可以用静态代码块完成")]),s._v("。")],1),s._v(" "),t("p",[t("strong",[s._v("总结：")])]),s._v(" "),t("p",[t("u",[s._v("需要提前准备数据，并且是只需要一份这个数据，因此使用 static 修饰的时候，需要用到静态代码块。")])]),s._v(" "),t("h3",{attrs:{id:"_2-3-设计模式-单例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-设计模式-单例"}},[s._v("#")]),s._v(" 2.3 设计模式：单例")]),s._v(" "),t("h4",{attrs:{id:"_2-3-1-什么是设计模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-什么是设计模式"}},[s._v("#")]),s._v(" 2.3.1 什么是设计模式")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("开发中经常遇到一些问题，一个问题通常有n种解法的，但其中有一种解法是最优的，这个最优的解法被总结出来，称之为设计模式。")])]),s._v(" "),t("li",[t("p",[s._v("设计模式有20多种，对应20多种软件开发中会遇到的问题，学设计模式主要是学2点：")]),s._v(" "),t("ul",[t("li",[s._v("第一：这种模式用来解决什么问题。")]),s._v(" "),t("li",[s._v("第二：遇到这种问题了，该模式是怎么写的，他是如何解决这个问题的。")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-3-2-单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-单例模式"}},[s._v("#")]),s._v(" 2.3.2 单例模式")]),s._v(" "),t("p",[s._v("可以保证系统中，应用该模式的这个类永远只有一个实例，即"),t("strong",[s._v("保证一个类永远只能创建一个对象")]),s._v("。例如任务管理器对象我们只需要一个就可以解决问题了，这样可以节省内存空间。")]),s._v(" "),t("p",[s._v("单例的实现方式有很多，如饿汉单例模式、懒汉单例模式，……")]),s._v(" "),t("h4",{attrs:{id:"_2-3-3-饿汉单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-饿汉单例模式"}},[s._v("#")]),s._v(" 2.3.3 饿汉单例模式")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在用类获取对象的时候，对象已经提前为你创建好了。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("设计步骤：")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("定义一个类，把构造器私有")])]),s._v(" "),t("li",[t("p",[s._v("定义一个静态变量存储一个对象")])])])]),s._v(" "),t("li",[t("p",[s._v("代码示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** a、定义一个单例类 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** c.定义一个静态变量存储一个对象即可：属于类，与类一起加载一次 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),s._v(" instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** b.单例必须私有构造器*/")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"创建了一个对象"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** \n  别的类中的使用：直接获取该单例的对象\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当有多条语句创建s1、s2、s3...时，他们都是相等的，是同一个对象")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-3-4-懒汉单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-懒汉单例模式"}},[s._v("#")]),s._v(" 2.3.4 懒汉单例模式")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在真正需要该对象的时候，才去创建一个对象(延迟加载对象)。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("设计步骤：")])]),s._v(" "),t("ul",[t("li",[s._v("定义一个类，把构造器私有")]),s._v(" "),t("li",[s._v("定义一个静态变量存储一个对象")]),s._v(" "),t("li",[s._v("提供一个返回单例对象的方法")])])]),s._v(" "),t("li",[t("p",[s._v("代码示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 定义一个单例类 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 定义一个静态变量存储一个对象即可:属于类，与类一起加载一次 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),s._v(" instance "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认值：null")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 单例必须私有构造器*/")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 必须提供一个方法返回一个单例对象  */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一次来拿对象：此时需要创建对象    ")]),s._v("\n\t        instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SingleInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("⚠️ 上述代码中，line 4 中用 private 修饰对象，此时无法从该类外部使用 "),t("code",[s._v("SingleInstance s1 = SingleInstance.instance")]),s._v(" 获取对象了，只能使用"),t("code",[s._v("SingleInstance s1 = SingleInstance.getInstance()")]),s._v(" 获取。否则可能会拿到 null 值，不符合需求。")])])]),s._v(" "),t("h4",{attrs:{id:"_2-3-5-饿汉单例模式-vs-懒汉单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-5-饿汉单例模式-vs-懒汉单例模式"}},[s._v("#")]),s._v(" 2.3.5 饿汉单例模式 VS 懒汉单例模式")]),s._v(" "),t("p",[s._v("懒汉单例模式节省内存，在不需要创建对象时，不会在栈内存中创建内存。")]),s._v(" "),t("p",[s._v("饿汉单例模式更快些，当需要对象时，已经在内存中了。")]),s._v(" "),t("h2",{attrs:{id:"_4-面向对象三大特征之二-继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-面向对象三大特征之二-继承"}},[s._v("#")]),s._v(" 4. 面向对象三大特征之二：继承")]),s._v(" "),t("h3",{attrs:{id:"_4-1-继承概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-继承概述"}},[s._v("#")]),s._v(" 4.1 继承概述")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("关键字：extends，建立两个类之间的父子关系")])]),s._v(" "),t("li",[t("p",[s._v("基本使用："),t("code",[s._v("public class Student extends People {}")]),s._v(" 。 Student 称为子类（派生类），People 称为父类(基类 或超类)。")])]),s._v(" "),t("li",[t("p",[s._v("好处：子类继承父类后，可以直接使用父类公共的属性和方法了。因此，用好这个技术可以很好的我们提高代码的复用性")])])]),s._v(" "),t("h3",{attrs:{id:"_4-2-继承的设计规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-继承的设计规范"}},[s._v("#")]),s._v(" 4.2 继承的设计规范")]),s._v(" "),t("p",[s._v("子类们相同特征（共性属性，共性方法）放在父类中定义，子类独有的的属性和行为应该定义在子类自己里面。")]),s._v(" "),t("h3",{attrs:{id:"_4-3-继承的内存运行原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-继承的内存运行原理"}},[s._v("#")]),s._v(" 4.3 继承的内存运行原理")]),s._v(" "),t("p",[s._v("创建一个子类对象时，实际会在堆内存中分为父类空间和子类空间两部分；对外是一个对象，对内会分为两部分，整个代表一个子类对象。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://blog-1310567564.cos.ap-beijing.myqcloud.com/img/image-20230226105900152.png",alt:"image-20230226105900152"}})]),s._v(" "),t("h3",{attrs:{id:"_4-4-继承的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-继承的特点"}},[s._v("#")]),s._v(" 4.4 继承的特点")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("子类可以继承父类的属性和行为，但是子类不能继承父类的构造器。")]),s._v(" "),t("ul",[t("li",[s._v("子类有自己的构造器，父类构造器用于初始化父类对象。")])])]),s._v(" "),t("li",[t("p",[s._v("Java是单继承模式：一个类只能继承一个直接父类。")]),s._v(" "),t("ul",[t("li",[s._v("为啥？反证，当多个爸爸中让你复习不一样的内容，那你就不知道该复习哪门啦，出现了"),t("u",[s._v("二义性")])])])]),s._v(" "),t("li",[t("p",[s._v("Java不支持多继承、但是支持多层继承。")]),s._v(" "),t("ul",[t("li",[s._v("多层继承：儿子 -> 爸爸 -> 爷爷")]),s._v(" "),t("li",[s._v("基于"),t("strong",[s._v("就近原则")]),s._v("使用父类中的成员变量和成员方法")])])]),s._v(" "),t("li",[t("p",[s._v("Java中所有的类都是 Object 类的子类。")]),s._v(" "),t("ul",[t("li",[s._v("要么直接继承了Object , 要么默认继承了Object , 要么间接继承了Object")]),s._v(" "),t("li",[s._v("Object是祖宗类。")])])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("一些小注意点")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("子类是否可以继承父类的私有成员？")])]),s._v(" "),t("p",[s._v("子类可以继承父类的私有成员，但不能直接访问。如，大头儿子继承了小头爸爸的保险柜，但他没有密码，打不开。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("子类是否可以继承父类的静态成员？")])]),s._v(" "),t("p",[s._v("有争议的知识点。")]),s._v(" "),t("p",[s._v("子类可以直接使用父类的静态成员（共享）。")]),s._v(" "),t("p",[s._v("但黑马认为：子类不能继承父类的静态成员。（"),t("u",[s._v("共享并非继承")]),s._v("）。如，爸爸的车给儿子开，这只是共享，不是继承，车没有给儿子。")])])])]),s._v(" "),t("h3",{attrs:{id:"_4-5-继承之后的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-继承之后的特点"}},[s._v("#")]),s._v(" 4.5 继承之后的特点")]),s._v(" "),t("h4",{attrs:{id:"_4-5-1-成员变量、成员方法的访问特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-成员变量、成员方法的访问特点"}},[s._v("#")]),s._v(" 4.5.1 成员变量、成员方法的访问特点")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("在子类方法中访问成员")]),s._v("（成员变量、成员方法）满足：就近原则\n"),t("ul",[t("li",[s._v("子类局部范围找 → 子类成员范围找 → 父类成员范围找，如果父类范围还没有找到则报错。")])])]),s._v(" "),t("li",[t("strong",[s._v("在子类中使用父类的重名成员")]),s._v("怎么办？\n"),t("ul",[t("li",[s._v("子类父类出现重名成员，优先使用子类的")]),s._v(" "),t("li",[s._v("可通过 super 关键字，指定访问父类的成员，格式："),t("code",[s._v("super.父类成员变量/方法")])])])])]),s._v(" "),t("h4",{attrs:{id:"_4-5-2-继承后-方法重写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-继承后-方法重写"}},[s._v("#")]),s._v(" 4.5.2 继承后：方法重写")]),s._v(" "),t("p",[t("strong",[s._v("方法重写的基本知识：")])]),s._v(" "),t("ul",[t("li",[s._v("什么是方法重写？\n"),t("ul",[t("li",[s._v("在继承体系中，子类出现了和父类中一模一样的方法声明，称子类的这个方法是重写的方法。")])])]),s._v(" "),t("li",[s._v("方法重写的应用场景\n"),t("ul",[t("li",[s._v("子类需要父类的功能，但父类的该功能不完全满足自己的需求时")])])]),s._v(" "),t("li",[s._v("案例：\n"),t("ul",[t("li",[s._v("旧手机的功能只能是基本的打电话，发信息")]),s._v(" "),t("li",[s._v("新手机的功能需要能够：基本的打电话下支持视频通话。基本的发信息下支持发送语音和图片")])])])]),s._v(" "),t("p",[t("strong",[s._v("@override 注解：")])]),s._v(" "),t("ul",[t("li",[s._v("@Override 是放在重写后的方法上，作为重写是否正确的校验注解。")]),s._v(" "),t("li",[s._v("加上该注解后如果重写错误，编译阶段会出现错误提示。")]),s._v(" "),t("li",[s._v("建议重写方法都加 @Override 注解，代码安全，优雅！")])]),s._v(" "),t("p",[t("strong",[s._v("方法重写注意事项和要求：")])]),s._v(" "),t("ul",[t("li",[s._v("重写方法的名称、形参列表必须与被重写方法的名称和参数列表一致（申明必须一样，访问权限也一般都是一样的）。\n"),t("ul",[t("li",[t("font",{attrs:{color:"#dd0000"}},[s._v("申明不变，重新实现")])],1)])]),s._v(" "),t("li",[s._v("私有方法不能被重写。")]),s._v(" "),t("li",[s._v("子类重写父类方法时，访问权限必须大于或者等于父类 （private < 缺省 < protected < public）")]),s._v(" "),t("li",[s._v("子类不能重写父类的静态方法，如果重写会报错的。\n"),t("ul",[t("li",[s._v("原因：子类本身就没有继承到父类的静态方法，只是共享，因此无法覆盖它。调用中也是父类的静态方法用 “父类名.父类静态方法名” 调用，子类的用子类对应的方法调用，不会互相影响。")])])])]),s._v(" "),t("h4",{attrs:{id:"_4-5-3-继承后-子类构造器的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-3-继承后-子类构造器的特点"}},[s._v("#")]),s._v(" 4.5.3 继承后：子类构造器的特点")]),s._v(" "),t("p",[t("strong",[s._v("子类继承父类后构造器的特点：")])]),s._v(" "),t("ul",[t("li",[t("font",{attrs:{color:"#dd0000"}},[s._v("子类中所有的构造器默认都会先访问父类的**"),t("u",[s._v("无参构造器")]),s._v("**，再执行自己。")])],1)]),s._v(" "),t("p",[t("strong",[s._v("原因：")])]),s._v(" "),t("ul",[t("li",[s._v("子类在初始化的时候，有可能会使用到父类中的数据，如果父类没有完成初始化，子类将无法使用父类的数据。")]),s._v(" "),t("li",[s._v("子类初始化之前，一定要调用父类构造器先完成父类数据空间的初始化。")])]),s._v(" "),t("p",[t("strong",[s._v("怎么调用父类构造器的？")])]),s._v(" "),t("ul",[t("li",[s._v("子类构造器的第一行语句默认都是："),t("code",[s._v("super()")]),s._v("，不写也存在。")])]),s._v(" "),t("h4",{attrs:{id:"_4-5-4-继承后-子类构造器访问父类有参构造器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-4-继承后-子类构造器访问父类有参构造器"}},[s._v("#")]),s._v(" 4.5.4 继承后：子类构造器访问父类有参构造器")]),s._v(" "),t("p",[t("strong",[s._v("super调用父类有参数构造器的作用：")])]),s._v(" "),t("ul",[t("li",[s._v("初始化继承自父类的数据。")]),s._v(" "),t("li",[s._v("即，Teacher 类继承了 People 类，在 Teacher 中初始化 People 定义好的 name，age")])]),s._v(" "),t("p",[t("strong",[s._v("如果父类中没有无参数构造器，只有有参构造器，会出现什么现象呢？")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("会报错。因为"),t("font",{attrs:{color:"#dd0000"}},[s._v("子类默认是调用父类无参构造器的")]),s._v("。")],1)]),s._v(" "),t("li",[t("p",[s._v("但子类中如果只调用了父类的有参构造器，是不会报错的。")])]),s._v(" "),t("li",[t("p",[s._v("解决：子类构造器中通过 super(…)，手动调用父类的有参数构造器")])]),s._v(" "),t("li",[t("p",[t("font",{attrs:{color:"#dd0000"}},[t("strong",[s._v("建议：将无参构造器全都写出来")])])],1)])]),s._v(" "),t("h3",{attrs:{id:"_4-6-this、super-使用总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-this、super-使用总结"}},[s._v("#")]),s._v(" 4.6 this、super 使用总结")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("this：代表本类对象的引用；")])]),s._v(" "),t("li",[t("p",[s._v("super：代表父类存储空间的标识。")])]),s._v(" "),t("li",[t("p",[s._v("示例代码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n\t后台创建对象封装数据的时候如果用户没有输入学校，则默认使用“黑马培训中心”;如果用户输入了学校则使用用户输入的学校信息\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" schoolName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" “黑马培训中心”"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用两个参数的构造器")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\n     \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" schoolName "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("schoolName "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" schoolName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])])])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("this(...) 和 super(...) 使用注意点")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("子类通过 this (...）去调用本类的其他构造器（如有参构造器），本类其他构造器会通过 super 去手动调用父类的构造器，最终还是会调用父类构造器的。")])]),s._v(" "),t("li",[t("p",[s._v("this(…) super(…) 都只能放在构造器的第一行，所以二者不能共存在同一个构造器中。")]),s._v(" "),t("ul",[t("li",[s._v("用 this() 构造器时，可能会调用兄弟构造器，兄弟构造器也会调用他爸 super()，若自己也调用super()，会造成调用两次 super()")])])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);